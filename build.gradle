apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'code-quality'
apply plugin: 'idea'

version = '0.6.0'
group = 'com.github.groovy-wslite'

sourceCompatibility = 1.5
targetCompatibility = 1.5

repositories {
    mavenCentral()
    mavenRepo url: 'http://m2repo.spockframework.org/releases'
}

dependencies {
    groovy 'org.codehaus.groovy:groovy-all:1.7.6'
    testCompile('org.spockframework:spock-core:0.5-groovy-1.7') {
        exclude module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:2.2'
}

sourceSets {
    integrationTest {
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
        groovy {
            srcDir 'src/integrationTest/groovy'
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'groovydoc'
    from groovydoc.destinationDir
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

codeNarcConfigFileName = './config/codenarc/codenarc.groovy'

// Disable Checkstyle tasks
task checkstyleMain(overwrite: true) << {};
task checkstyleTest(overwrite: true) << {};
task checkstyleIntegrationTest(overwrite: true) << {};

// Do not fail the build for CodeNarc tasks
tasks.withType(CodeNarc).all { codeNarcTask ->
    codeNarcTask.ignoreFailures = true
}

build.dependsOn integrationTest

artifacts {
    archives jar, sourcesJar, javadocJar, groovydocJar
}

signing {
    if (['secretKeyRingFile', 'keyId', 'password'].every { project.hasProperty("signing.${it}") }) {
        sign configurations.archives
    }
}

uploadArchives {
    // Should be set in gradle.properties (check gradle.properties.sample)
    if (['mavenUsername', 'mavenPassword'].every { project.hasProperty(it) }) {
       repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signPom(deployment) }

                snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                    authentication(userName: mavenUsername, password: mavenPassword)
                }

                repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                    authentication(userName: mavenUsername, password: mavenPassword)
                }

                pom.project {
                    name 'groovy-wslite'
                    description 'Lightweight SOAP and REST webservice clients for Groovy'
                    url 'https://github.com/jwagenleitner/groovy-wslite'
                    inceptionYear '2011'
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    scm {
                        url 'scm:git:git@github.com:jwagenleitner/groovy-wslite.git'
                        connection 'https://github.com/jwagenleitner/groovy-wslite'
                    }
                    developers {
                        developer {
                            id 'jwagenleitner'
                            name 'John Wagenleitner'
                            email 'john.wagenleitner@gmail.com'
                            roles {
                                role 'Lead'
                                role 'Founder'
                            }
                        }
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-7'
}
